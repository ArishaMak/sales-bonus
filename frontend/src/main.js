/**
 * ===== main.js =====
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —É–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞,
 * –∏—Ö –∞–Ω–∞–ª–∏–∑–æ–º (–≤—ã—Ä—É—á–∫–∞, –ø—Ä–∏–±—ã–ª—å, –±–æ–Ω—É—Å—ã) –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ –∫–æ–Ω—Å–æ–ª–∏.
 * –¢–µ–ø–µ—Ä—å –æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é, –ø–æ–∏—Å–∫ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—é.
 */

// ---------------------- –ù–ê–°–¢–†–û–ô–ö–ò ----------------------
const API_BASE = 'http://localhost:5000/api';

// –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ (–º–æ–∂–Ω–æ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ/—Ñ–∏–ª—å—Ç—Ä–∞—Ö)
let queryParams = {
  page: 1,
  limit: 9999, // –ø–æ—Ç–æ–º –∏—Å–ø—Ä–∞–≤–ª—é
  search: '',
  sellerId: '',
  sku: '',
  sortBy: 'purchase_id',
  sortDir: 'asc'
};

// ---------------------- –§–£–ù–ö–¶–ò–ò –†–ê–°–ß–Å–¢–ê ----------------------

/*function calculateSimpleRevenue(purchase, _product) {
  const { discount = 0, sale_price = 0, quantity = 0 } = purchase;
  const finalDiscount = 1 - discount / 100;
  return sale_price * quantity * finalDiscount;
}*/
function calculateSimpleRevenue(item, product) {  // –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ param –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
  const { discount = 0, quantity = 0 } = item;   // –ò–∑ item: discount, quantity
  const sale_price = product.sale_price || 0;    // –ò–∑ product: sale_price
  const finalDiscount = 1 - discount / 100;
  return sale_price * quantity * finalDiscount;
}

function calculateBonusByProfit(index, total, seller) {
  const max_bonus = 0.15;
  const high_bonus = 0.1;
  const low_bonus = 0.05;
  const min_bonus = 0;
  if (index === 0) return seller.profit * max_bonus;
  else if (index === 1 || index === 2) return seller.profit * high_bonus;
  else if (index === total - 1) return seller.profit * min_bonus;
  else return seller.profit * low_bonus;
}

// ---------------------- –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ----------------------

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ (–ø—Ä–æ–¥–∞–≤—Ü—ã, –∫–ª–∏–µ–Ω—Ç—ã, —Ç–æ–≤–∞—Ä—ã)
 */
async function loadCatalogs() {
  const response = await fetch(`${API_BASE}/catalogs`);
  if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤');
  return await response.json();
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∑–∞–ø–∏—Å–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π, –ø–æ–∏—Å–∫–æ–º –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
async function loadPurchaseRecords(params = {}) {
  const query = new URLSearchParams(params).toString();
  const response = await fetch(`${API_BASE}/records?${query}`);
  if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–ø–∏—Å–µ–π');
  return await response.json();
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
 */
async function loadDataFromServer(params = {}) {
  const [catalogs, recordsData] = await Promise.all([
    loadCatalogs(),
    loadPurchaseRecords(params)
  ]);

  return {
    products: catalogs.products,
    sellers: catalogs.sellers,
    customers: catalogs.customers,
    purchase_records: recordsData.items,
    total: recordsData.total,
    page: recordsData.page,
    limit: recordsData.limit
  };
}

// ---------------------- –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• ----------------------
const SELLERS_PER_PAGE = 5;
let allSellers = [];        // ‚Üê —Ö—Ä–∞–Ω–∏—Ç –í–°–ï–• –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
let currentPage = 1;        // ‚Üê —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞

function analyzeSalesData(data, options) {
  console.log('=== –û–¢–õ–ê–î–ö–ê –î–ê–ù–ù–´–• ===');
  console.log('–ü—Ä–æ–¥–∞–≤—Ü—ã:', data.sellers.slice(0,3));
  console.log('–ü–æ–∫—É–ø–∫–∏:', data.purchase_records.slice(0,3));

  // –†–∞–Ω–Ω–∏–π –≤—ã—Ö–æ–¥, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
  if (
    !data ||
    !Array.isArray(data.customers) ||
    !Array.isArray(data.products) ||
    !Array.isArray(data.sellers) ||
    !Array.isArray(data.purchase_records)
  ) {
    console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
    return [];
  }

  const { calculateRevenue, calculateBonus } = options;

  try {
    // --- 1. –°–æ–∑–¥–∞—ë–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ ---
    const sellerStats = data.sellers.map(seller => {
      const id = parseInt(seller.id) || parseInt(seller.seller_id) || parseInt(seller.sellerId) || `seller_${seller.id || 'unknown'}`;
      return {
        id: id.toString(),  // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫ —Å—Ç—Ä–æ–∫–µ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞
        name: `${seller.first_name ?? ''} ${seller.last_name ?? ''}`.trim(),
        revenue: 0,  // –ß–∏—Å–ª–æ
        profit: 0,   // –ß–∏—Å–ª–æ
        sales_count: 0,
        products_sales: {},
        bonus: 0
      };
    });

    // --- 2. –°–æ–∑–¥–∞—ë–º –∏–Ω–¥–µ–∫—Å—ã ---
    const sellerIndex = sellerStats.reduce((acc, obj) => {
      acc[obj.id] = obj;
      // –î—É–±–ª–∏—Ä—É–µ–º –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –∫–ª—é—á–µ–π (–µ—Å–ª–∏ seller_id ‚Äî —á–∏—Å–ª–æ –≤ –∑–∞–ø–∏—Å—è—Ö)
      const numericId = parseInt(obj.id);
      if (!isNaN(numericId)) {
        acc[numericId.toString()] = obj;
      }
      return acc;
    }, {});

    const productIndex = data.products.reduce((acc, p) => {
      const sku = p.sku?.toString() || '';
      acc[sku] = {
        name: p.name || '',
        category: p.category || '',
        sku,
        purchase_price: parseFloat(p.purchase_price) || 0,  // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫ —á–∏—Å–ª—É
        sale_price: parseFloat(p.sale_price) || 0           // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫ —á–∏—Å–ª—É
      };
      return acc;
    }, {});

    console.log('üîç –ö–ª—é—á–∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤:', Object.keys(sellerIndex).slice(0, 10));

    // --- 3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–∫—É–ø–∫–∏ ---
    data.purchase_records.forEach(record => {
      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º sellerId
      let sellerId = record.seller_id?.toString() ||
                     record.sellerId?.toString() ||
                     (record.seller?.id?.toString()) ||
                     (typeof record.seller === 'string' ? record.seller : null);

      if (!sellerId) {
        console.warn('‚ö†Ô∏è –ù–µ—Ç sellerId –≤ –∑–∞–ø–∏—Å–∏:', record);
        return;
      }

      const seller = sellerIndex[sellerId];
      if (!seller) {
        console.warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–æ–¥–∞–≤–µ—Ü –¥–ª—è ID:', sellerId, '(–¥–æ—Å—Ç—É–ø–Ω—ã–µ:', Object.keys(sellerIndex).slice(0,5), ')');
        return;
      }

      if (!record.items || !Array.isArray(record.items)) {
        console.warn('‚ö†Ô∏è –ó–∞–ø–∏—Å—å –±–µ–∑ items:', record);
        return;
      }

      seller.sales_count += 1;  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫

      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º total_amount
      const totalAmount = parseFloat(record.total_amount) || 0;
      seller.revenue += totalAmount;

      record.items.forEach(item => {
        const sku = item.sku?.toString() || '';
        const product = productIndex[sku];
        if (!product) {
          console.warn('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä –ø–æ SKU:', sku, '(–¥–æ—Å—Ç—É–ø–Ω—ã–µ:', Object.keys(productIndex).slice(0,5), ')');
          return;
        }

        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –ø–æ–ª—è –≤ item
        const quantity = parseFloat(item.quantity) || 0;
        const discount = parseFloat(item.discount) || 0;

        const cost = product.purchase_price * quantity;
        const revenue = calculateRevenue({ ...item, quantity, discount }, product);  // –ü–µ—Ä–µ–¥–∞—ë–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ
        const profit = parseFloat(revenue) - parseFloat(cost);  // –Ø–≤–Ω–æ –∫ —á–∏—Å–ª—É

        seller.profit += profit;

        if (!seller.products_sales[sku]) seller.products_sales[sku] = 0;
        seller.products_sales[sku] += quantity;
      });
    });

    console.log('üìä –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø–µ—Ä–≤—ã–µ 3):', sellerStats.slice(0,3).map(s => ({ name: s.name, revenue: s.revenue, profit: s.profit })));

    // --- 4. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ –±–æ–Ω—É—Å—ã ---
    sellerStats.sort((a, b) => parseFloat(b.profit) - parseFloat(a.profit));

    sellerStats.forEach((seller, index) => {
      seller.bonus = calculateBonus(index, sellerStats.length, seller);
      seller.top_products = Object.entries(seller.products_sales)
        .sort((a, b) => parseFloat(b[1]) - parseFloat(a[1]))  // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º quantity
        .slice(0, 10)
        .map(([sku, quantity]) => ({ sku, quantity: parseFloat(quantity) }));
    });

    // --- 5. –ò—Ç–æ–≥ (—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≤) ---
    const results = sellerStats.map(seller => ({
      seller_id: seller.id,
      name: seller.name,
      revenue: parseFloat(seller.revenue) || 0,  // –§–∏–Ω–∞–ª—å–Ω—ã–π parseFloat
      profit: parseFloat(seller.profit) || 0,
      sales_count: seller.sales_count || 0,
      top_products: seller.top_products || [],
      bonus: parseFloat(seller.bonus) || 0
    }));

    console.log('‚úÖ –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–ø–µ—Ä–≤—ã–µ 3):', results.slice(0,3));
    return results;

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ analyzeSalesData:', err);
    console.error('–ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:', { sellers: data.sellers?.[0], records: data.purchase_records?.[0] });
    return [];  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
  }
}

// ---------------------- –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï ----------------------
function renderReport(results, totalSellers, page, limit) {
  const tbody = document.querySelector('#reportTable tbody');
  const summary = document.getElementById('summary');
  const pagination = document.getElementById('pagination');

  if (!tbody) return console.error('–¢–∞–±–ª–∏—Ü–∞ #reportTable –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');

  tbody.innerHTML = '';

  if (!results || results.length === 0) {
    tbody.innerHTML = '<tr><td colspan="6">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</td></tr>';
    if (summary) summary.textContent = '';
    if (pagination) pagination.innerHTML = '';
    return;
  }

  results.forEach(seller => {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${seller.name}</td>
      <td>${seller.revenue.toFixed(2)}</td>
      <td>${seller.profit.toFixed(2)}</td>
      <td>${seller.sales_count}</td>
      <td>${seller.bonus.toFixed(2)}</td>
      <td>${seller.top_products.map(p => `${p.sku} (${p.quantity})`).join(', ')}</td>
    `;
    tbody.appendChild(tr);
  });

  if (summary) summary.textContent = `–í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤: ${totalSellers} (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${page})`;

  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø–æ –ø—Ä–æ–¥–∞–≤—Ü–∞–º
  const totalPages = Math.ceil(totalSellers / limit);
  let pagHtml = `
    <button class="btn btn-secondary" onclick="changePage(${page - 1})" ${page <= 1 ? 'disabled' : ''}>
      ‚Üê –ü—Ä–µ–¥
    </button>
    <span style="padding:0 1em;">${page} / ${totalPages}</span>
    <button class="btn btn-secondary" onclick="changePage(${page + 1})" ${page >= totalPages ? 'disabled' : ''}>
      –°–ª–µ–¥ ‚Üí
    </button>
  `;
  if (pagination) pagination.innerHTML = pagHtml;
}

function populateFilters(catalogs) {
  const sellerSelect = document.getElementById('sellerFilter');
  const skuSelect = document.getElementById('skuFilter');

  sellerSelect.innerHTML = '<option value="">–í—Å–µ –ø—Ä–æ–¥–∞–≤—Ü—ã</option>' +
    catalogs.sellers.map(s => `<option value="${s.id}">${s.first_name} ${s.last_name}</option>`).join('');

  skuSelect.innerHTML = '<option value="">–í—Å–µ —Ç–æ–≤–∞—Ä—ã</option>' +
    catalogs.products.map(p => `<option value="${p.sku}">${p.name}</option>`).join('');
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–¥–ª—è onclick)
window.changePage = function(newPage) {
  const totalPages = Math.ceil(allSellers.length / SELLERS_PER_PAGE);
  if (newPage < 1 || newPage > totalPages) return;

  currentPage = newPage;
  const paginatedSellers = getPaginatedSellers(allSellers, currentPage);
  renderReport(paginatedSellers, allSellers.length, currentPage, SELLERS_PER_PAGE);
};

// --- –ü–∞–≥–∏–Ω–∞—Ü–∏—è ---
function getPaginatedSellers(sellers, page = 1) {
  const start = (page - 1) * SELLERS_PER_PAGE;
  const end = start + SELLERS_PER_PAGE;
  return sellers.slice(start, end);
}

async function loadAndRender(params = queryParams) {
  try {
    const data = await loadDataFromServer(params);

    // 1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º ‚Üí –ø–æ–ª—É—á–∞–µ–º –í–°–ï–• –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
    allSellers = analyzeSalesData(data, {
      calculateRevenue: calculateSimpleRevenue,
      calculateBonus: calculateBonusByProfit
    });

    populateFilters(data);

    // 2. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    currentPage = 1;

    // 3. –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ 5 –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
    const paginatedSellers = getPaginatedSellers(allSellers, currentPage);

    // 4. –†–µ–Ω–¥–µ—Ä–∏–º
    renderReport(paginatedSellers, allSellers.length, currentPage, SELLERS_PER_PAGE);

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞:', err);
  }
}

// ---------------------- –ê–ù–ò–ú–ê–¶–ò–Ø –ë–£–ö–í –í –ó–ê–ì–û–õ–û–í–ö–ï ----------------------
/*function animateHeadline() {
  const h1 = document.querySelector('.h1');
  if (!h1) return;

  const text = h1.textContent.trim();
  if (!text) return;

  h1.innerHTML = '';
  const letters = text.split('');

  letters.forEach((letter, i) => {
    const span = document.createElement('span');
    span.className = 'letter';
    span.textContent = letter === ' ' ? '\u00A0' : letter;
    span.style.animationDelay = `${Math.random() * 0.6}s`;
    h1.appendChild(span);
  });

  h1.offsetHeight;
}*/
/*
// ---------------------- –ê–ù–ò–ú–ê–¶–ò–Ø –ë–£–ö–í –í –ó–ê–ì–û–õ–û–í–ö–ï ----------------------
function animateHeadline() {
  const h1 = document.querySelector('.h1');
  if (!h1) return;

  // –Ø–≤–Ω–æ –∑–∞–¥–∞–µ–º —Å—Ç—Ä–æ–∫–∏
  const lines = [
    '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂',    // –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    '–≤ —Ä–µ–∞–ª—å–Ω–æ–º',       // –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞
    '–≤—Ä–µ–º–µ–Ω–∏'           // —Ç—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
  ];

  h1.innerHTML = ''; // –æ—á–∏—â–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  let delay = 0;

  lines.forEach((line) => {
    const lineSpan = document.createElement('span');
    lineSpan.style.display = 'block'; // –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏

    for (let i = 0; i < line.length; i++) {
      const letterSpan = document.createElement('span');
      letterSpan.className = 'letter';
      letterSpan.textContent = line[i];
      letterSpan.style.display = 'inline-block';
      letterSpan.style.animationDelay = `${delay + Math.random() * 0.3}s`;
      lineSpan.appendChild(letterSpan);

      delay += 0.05;
    }

    h1.appendChild(lineSpan);
  });

  // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
  void h1.offsetHeight;
}*/

function animateHeadline() {
  const h1 = document.querySelector('.h1');
  if (!h1) return;

  const lines = [
    '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂',    // –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    '–≤ —Ä–µ–∞–ª—å–Ω–æ–º',       // –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞
    '–≤—Ä–µ–º–µ–Ω–∏'           // —Ç—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
  ];

  h1.innerHTML = ''; // –æ—á–∏—â–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  let delay = 0;

  lines.forEach(line => {
    const lineSpan = document.createElement('span');
    lineSpan.style.display = 'block';

    for (let i = 0; i < line.length; i++) {
      const letterSpan = document.createElement('span');
      letterSpan.className = 'letter';
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–π –ø—Ä–æ–±–µ–ª –¥–ª—è –ø—Ä–æ–±–µ–ª–æ–≤
      letterSpan.textContent = line[i] === ' ' ? '\u00A0' : line[i];
      letterSpan.style.display = 'inline-block';
      letterSpan.style.animationDelay = `${delay + Math.random() * 0.3}s`;
      lineSpan.appendChild(letterSpan);
      delay += 0.05;
    }

    h1.appendChild(lineSpan);
  });

  // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
  void h1.offsetHeight;
}

// ---------------------- –ê–ù–ò–ú–ê–¶–ò–Ø –ë–£–ö–í –í –°–°–´–õ–ö–ê–• –ú–ï–ù–Æ ----------------------
function animateMenuLinks() {
  const links = document.querySelectorAll('.menu a');

  links.forEach(link => {
    const text = link.textContent.trim();
    if (!text) return;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
    link.dataset.originalText = text;

    // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥—É—é –±—É–∫–≤—É –≤ span
    link.innerHTML = '';
    text.split('').forEach(letter => {
      const span = document.createElement('span');
      span.textContent = letter === ' ' ? '\u00A0' : letter;
      link.appendChild(span);
    });

     // –î–æ–±–∞–≤–ª—è–µ–º hover-–∞–Ω–∏–º–∞—Ü–∏—é
    link.addEventListener('mouseenter', () => {
      const spans = link.querySelectorAll('span');
      spans.forEach(span => {
        span.classList.remove('letter'); // —Å–±—Ä–æ—Å —Å—Ç–∞—Ä–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
        void span.offsetWidth; // –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ (—Ä–µ—Ñ–ª–æ—É)
        span.classList.add('letter');
        span.style.animationDelay = `${Math.random() * 0.4}s`;
      });
    });
  });
}

// ---------------------- –û–°–ù–û–í–ù–û–ô –ó–ê–ü–£–°–ö ----------------------

/*async function main() {
  try {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...');
    const data = await loadDataFromServer(queryParams);

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.purchase_records.length} –∑–∞–ø–∏—Å–µ–π (–∏–∑ ${data.total})`);
    console.log('üì¶ –ü—Ä–æ–¥–∞–≤—Ü—ã:', data.sellers.length);
    console.log('üì¶ –¢–æ–≤–∞—Ä—ã:', data.products.length);

    const results = analyzeSalesData(data, {
      calculateRevenue: calculateSimpleRevenue,
      calculateBonus: calculateBonusByProfit
    });

    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:', results);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞:', err);
  }
}*/

// –∏ —Ç—É—Ç –µ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —Ä–µ–Ω–¥–µ—Ä –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ—Ç—Å—é–¥–∞
async function main() {
  try {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...');
    // –°–Ω–∞—á–∞–ª–∞ –∞–Ω–∏–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    animateHeadline();
    const filtersPanel = document.querySelector('.filters-panel');
    if (filtersPanel) {
      // –ù–µ–º–Ω–æ–≥–æ –∑–∞–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
      setTimeout(() => {
        filtersPanel.classList.add('animate');
      }, 600);
    }
    await loadAndRender(queryParams);  // –§–∏–∫—Å: —Ç–µ–ø–µ—Ä—å —Ä–µ–Ω–¥–µ—Ä–∏—Ç UI
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞:', err);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  animateHeadline();
  animateMenuLinks();
});

// ---------------------- –û–ë–†–ê–ë–û–¢–ö–ê –§–ò–õ–¨–¢–†–û–í ----------------------
/* document.getElementById('applyFilters').addEventListener('click', async () => {
  queryParams.search = document.getElementById('search').value;
  queryParams.sellerId = document.getElementById('sellerFilter').value;
  queryParams.sku = document.getElementById('skuFilter').value;

  const data = await loadDataFromServer(queryParams);
  const results = analyzeSalesData(data, {
    calculateRevenue: calculateSimpleRevenue,
    calculateBonus: calculateBonusByProfit
  });
  renderReport(results);
});

main(); */

const applyBtn = document.getElementById('applyFilters');
if (applyBtn) {
  applyBtn.addEventListener('click', async () => {
    try {
      const searchEl = document.getElementById('search');
      const sellerEl = document.getElementById('sellerFilter');
      const skuEl = document.getElementById('skuFilter');

      if (searchEl) queryParams.search = searchEl.value.trim();
      if (sellerEl) queryParams.sellerId = sellerEl.value;
      if (skuEl) queryParams.sku = skuEl.value;

      // –°–±—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
      currentPage = 1;
      queryParams.page = 1;  // –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç

      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º
      await loadAndRender(queryParams);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', err);
    }
  });
} else {
  console.warn('–ö–Ω–æ–ø–∫–∞ #applyFilters –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
}

main();
